/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution 
{
    public int getLen(ListNode head)
    {
        int len= 0;
        ListNode t = head;
        while(t != null)
        {
            len++;
            t = t.next;
        }
        return len;
    }
    public ListNode swapFirstTwoNodes(ListNode head)
    {
        if(head == null)
            return null;
        if(head.next == null)
            return head;
        ListNode tmp1 = head,tmp2 = head.next;
        head = tmp2;
        head.next = tmp1;
        tmp1.next = tmp2.next;
        if(getLen(head) == 2)
        return head;
        head.next.next = swapFirstTwoNodes(head.next.next);
        return head;
    }
    public ListNode swapPairs(ListNode head) 
    {
        head = swapFirstTwoNodes(head);
        return head;
    }
}