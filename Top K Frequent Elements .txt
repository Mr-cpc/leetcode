public class Solution {
    List<Integer> l = new ArrayList<Integer>();
    public List<Integer> topKFrequent(int[] nums, int k) 
    {
         //Arrays.sort(nums);
         HashMap<Integer,Integer> ht = new HashMap<Integer,Integer>();
         TreeMap<Integer,Integer> tr = new TreeMap<Integer,Integer>(new Comparator<Integer>(){
             public int compare(Integer o1,Integer o2)
             {
                 return o2.compareTo(o1);
             }
         } );
         for(int i = 0;i<nums.length;i++)
         {
             if(!ht.containsKey(nums[i]))
                ht.put(nums[i],0);
            else
                ht.put(nums[i],ht.get(nums[i])+1 );
         }
         Iterator<Integer> it = ht.keySet().iterator();
         while(it.hasNext() )
         {
             Integer me = it.next();
             tr.put(ht.get(me),me);
         }
         Iterator<Integer> it2 = tr.keySet().iterator();
        while(it.hasNext() && k>0)
         {
             Integer me = it2.next();
             l.add(tr.get(me));
            k--;
         }
         return l ;
    }
}