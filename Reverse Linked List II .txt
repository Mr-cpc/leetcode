/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    ListNode preM,t;
    public ListNode findNthNode(int n,ListNode head) {
        while(n>1) {
            head = head.next;
            n--;
        }
        return head;
    }
  
    public ListNode reverseBetween(ListNode head, int m, int n) 
    {
        if(head == null || head.next == null || m == n)
            return head;
        ListNode newH = new ListNode(0);
        newH.next = head;
        preM = findNthNode(m,newH);
        ListNode pre = preM.next,next = pre.next,s = pre;
        int i = n-m-1;
         do {
            t = next.next;
            next.next = pre;
            pre = next;
            next = t;
            i--;
        }while(i>1);
        preM.next = pre;
        s.next = next;
        return newH.next;
    }
}