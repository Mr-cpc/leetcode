public class Solution {
    HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>();
    int i = -1,j = -1;
  //  HashMap<Integer,Integer> hm2 = new HashMap<Integer,Integer>(); //记录数字与数组下标的对应关系
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        for(int i =0;i<nums.length;i++) {
            if(hm.containsKey(nums[i]) )
                hm.put(nums[i],hm.get(nums[i]) + 1 );
            else
                hm.put(nums[i],1);
        }
        if(hm.size() == nums.length )
            return false;
        else {
            Iterator it = hm.entrySet().iterator();
            while(it.hasNext() ) {
                Map.Entry next = (Map.Entry)it.next();
                int value = (Integer)next.getValue();
                if(value >= 2 ) {
                    int key = (Integer)next.getKey();
                    for(int i = 0;i<nums.length;i++) {
                        if(nums[i] != key)
                            continue;
                        else {
                            if(this.i == -1)
                                this.i = i;
                            else {
                                if(this.j == -1)
                                    this.j = i;
                            }
                                
                        }
                            
                    }
                    if(this.j - this.i <= k)
                        return true;
                    
                }
            }
            return false;
        }
        
    }
}