public class Solution {
    int jw;
    public int binAdd(char a, char b) {
        int jg = (a-'0') + (b-'0');
        jw = jg >> 1 ;
        return  jg % 2 ;
    }
    public String addBinary(String a, String b) {
        if(a.equals("") )
            return b;
        if(b.equals("") )
            return a;
        int lenA = a.length(),lenB = b.length();
        if(lenA > lenB ) {

            char[] res = new char[lenA + 1];
            int i = 0,s = res.length -1;
            for(;i<lenB;i++,s--) {
                res[s] = (char)(jw + binAdd(a.charAt(lenA-1-i),b.charAt(lenB-1-i) ) + '0');
            }
            while(lenA-1-i>=0) {
                res[s] = (char)(binAdd(a.charAt(lenA-1-i),(char)(jw + '0') ) + '0');
                i++;
                s--;
            }
            if(res[0] == '0')
                return new String(res,1,res.length-1);
            else
                return new String(res);
        }
        else {

            char res[] = new char[lenB + 1];
            int i = 0,s = res.length -1;
            for(;i<lenA;i++,s--) {
                res[s] = (char)(jw + binAdd(a.charAt(lenA-1-i),b.charAt(lenB-1-i) )+'0');
            }
            while(lenB-1-i>=0) {
                res[s] = (char)(binAdd(b.charAt(lenB-1-i),(char)(jw + '0') ) + '0');
                i++;
                s--;
            }
            if(res[0] == '0')
                return new String(res,1,res.length-1);
            else
                return new String(res);
        }

    }
}