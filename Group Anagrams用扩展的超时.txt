import java.util.Collection;
public class Solution {
    char[] cc;
    List<List<String>> ans;
    HashMap<MyHashMap<Character,Integer>,List<String>> map;
    public List<List<String>> groupAnagrams(String[] strs) {
        ans = new ArrayList<List<String>>();
        map = new  HashMap<MyHashMap<Character,Integer>,List<String>>();
        for(String str : strs) {
            MyHashMap<Character,Integer> hm = new MyHashMap<Character,Integer>();
            cc = str.toCharArray();
            for(char c:cc) {
                if(hm.containsKey(c)) 
                    hm.put(c,hm.get(c)+1 );
                else 
                    hm.put(c,1);
            }
            if(map.containsKey(hm)) {
                map.get(hm).add(str);
            }
            else {
                List<String> l = new ArrayList<String>();
                map.put(hm,l);
                l.add(str);
            }    
        }
        Collection<List<String>> s = map.values();
        ans.addAll(s);
        return ans;
    }
}

class MyHashMap<K,V> extends HashMap<K,V> {
    public boolean equals(HashMap<K,V> o)  {
        Set<K> s1 = this.keySet();
        Set<K> s2 = o.keySet();
        if(!s1.containsAll(s2) || !s2.containsAll(s1) )
            return false;
        Collection<V> v1 = this.values();
        Collection<V> v2 = o.values();
        if(!v1.containsAll(v2) || !v2.containsAll(v1))
            return false;
        return true;
    }
}