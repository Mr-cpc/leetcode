class MyQueue {
    // Push element x to the back of queue.
    Stack<Integer> a = new Stack<Integer>();//用作入队
    Stack<Integer> b = new Stack<Integer>();//用作出队
    public void push(int x) {
        a.push(x);
    }

    // Removes the element from in front of queue.
    public void pop() {
        if(!b.isEmpty() )
            b.pop();
        else {
            while(!a.isEmpty()) {
                b.push(a.pop());
            }
            b.pop();
        }
    }

    // Get the front element.
    public int peek() {
        if(!b.isEmpty() )
            return b.peek();
        else {
            while(!a.isEmpty()) {
                b.push(a.pop());
            }
            return b.peek();
        }        
    }

    // Return whether the queue is empty.
    public boolean empty() {
        return a.isEmpty() && b.isEmpty();
    }
}