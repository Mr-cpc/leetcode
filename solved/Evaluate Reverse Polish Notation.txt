public class Solution {
    static Set<String> set;
    static {
        set = new HashSet<>();
        set.add("+");
        set.add("-");
        set.add("*");
        set.add("/");
    }
    public int evalRPN(String[] tokens) {
        Stack<String> s = new Stack<>();
        for(String str:tokens) {
            if(!set.contains(str))
                s.push(str);
            else {
                int a = Integer.parseInt(s.pop()),b = Integer.parseInt(s.pop());
                switch (str) {
                    case "+":
                        s.push(String.valueOf(b+a) );break;
                    case "-":
                        s.push(String.valueOf(b-a) );break;
                    case "*":
                        s.push(String.valueOf(b*a) );break;
                    case "/":
                        s.push(String.valueOf(b/a));
                }
                
            }
        }
        return Integer.parseInt(s.pop() );
    }
}