public class Solution {
    public boolean isValidSudoku(char[][] board) {
        if(board.length == 0)
            return true;
        HashSet<Character> row = new HashSet<Character>();
        for(char[] r:board){
            for(char l:r){
                if(l=='.' )
                    continue;
                else {
                    if(row.contains(l))
                        return false;
                    else
                        row.add(l);
                }
            }
            row.clear();
        }
        row.clear();
        for(int i = 0;i<board.length;i++) {
            for(int j = 0;j<board.length;j++) {
                if(board[j][i]=='.' )
                    continue;
                else {
                    if(row.contains(board[j][i]))
                        return false;
                    else
                        row.add(board[j][i]);                    
                }
               
            }
            row.clear();
        }
        row.clear();
        for(int b = 0;b<9;b+=3) {
        for(int a = 0;a<9;a+=3) {
        for(int i = 0+a;i<3+a;i++) {
            for(int j = 0+b;j<3+b;j++) {
                if(board[i][j]=='.' )
                    continue;
                else {
                    if(row.contains(board[i][j]))
                        return false;
                    else
                        row.add(board[i][j]);                    
                }
            }
            
        }
        row.clear();
        }
        }
        return true;
    }
}