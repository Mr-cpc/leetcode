class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> res = new ArrayList<>(k);
        if(x <= arr[0]) {
            for(int i = 0;i<k;i++)
                res.add(arr[i]);
        }
        else {
            if(x >= arr[arr.length - 1]) {
                for(int i = 1;i<=k;i++)
                    res.add(arr[arr.length - i]);
                Collections.reverse(res);
            }
            else {
                int idx = closest(arr,x),i = idx - 1,j =  idx + 1,count = 1;
                res.add(arr[idx]);
                while(count < k && i >= 0 && j < arr.length) {
                    if(x - arr[i] <= arr[j] -x ) {
                        res.add(0,arr[i--]);
                    }
                    else {
                        res.add(res.size(),arr[j++]);
                    }
                    count++;
                }
                if(count >= k)
                    return res;
                else {
                    if(i < 0) {
                        while(count++ < k)
                            res.add(arr[j++]);
                    }
                    else {
                        while(count ++ < k)
                            res.add(0,arr[i--]);
                    }
                }
            }
        }
        return  res;        
    }
    public static int closest(int nums[],int x) {
        for(int i = 0;i<nums.length - 1;i++) {
            if(nums[i] < x && nums[i+1] >= x)
                return nums[i+1] - x <= x - nums[i]? i+1:i;
        }
        return nums.length - 1;
    }    
}