class Solution {
    public boolean exist(char[][] board, String word) {
        boolean ans = false;
        Set<Point> set = new HashSet<>();
        for(int i = 0;i<board.length;i++) {
            for(int j = 0;j<board[0].length;j++) {
                if(board[i][j] != word.charAt(0))
                    continue;
                else {
                    ans |= exist(board,word,i,j,set);
                    if(ans)
                        return true;
                }
            }
        }
        return false;
    }
    public boolean exist(char[][] board,String word,int x ,int y,Set<Point> set) {
        if("".equals(word))
            return true;
        else {
            if(x < 0 || x >= board.length || y < 0|| y>= board[0].length)
                return false;
            if(set.contains(new Point(x,y)))
                return false;
            else {
                if(board[x][y] != word.charAt(0))
                    return false;
                else {
                    boolean ans = false;
                    Point p = new Point(x,y); 
                    word = word.substring(1);
                    set.add(p);
                    ans |= exist(board,word,x-1,y,set);
                    set.remove(p);
                    
                    if(ans)
                        return ans;
                    
                    set.add(p);
                    ans |= exist(board,word,x+1,y,set);
                    set.remove(p);
                    
                    if(ans)
                        return ans;
                    
                    set.add(p);
                    ans |= exist(board,word,x,y-1,set);
                    set.remove(p);
                    
                    if(ans)
                        return ans;    
                    
                    set.add(p);
                    ans |= exist(board,word,x,y+1,set);
                    set.remove(p);
                    
                    return ans;
                }
            }
        }
    }
}


class Point {
    int x,y;
    public Point(int x,int y) {
        this.x = x;
        this.y = y;
    }
    @Override
    public boolean equals(Object obj) {
        if(!(obj instanceof Point))
            return false;
        Point p = (Point) obj;
        return p.x == this.x && p.y == this.y;
    }
    @Override
    public int hashCode() {
        return x *2 + y;
    }
}