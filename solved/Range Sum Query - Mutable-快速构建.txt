public class NumArray {
    int[] nums;
    int[] tree;
    int end;
    public int lowBit(int i)
    {
        return i & -i;
    }
    public NumArray(int[] nums) 
    {
        int k = 0;
        this.end = nums.length;
        this.tree = new int[nums.length+1];
        this.nums= nums;
        for(int i = 1;i<=this.end;i++)
        {
            add(i,nums[i-1]);
            /*
            k = lowBit(i);
            for(int j = i;j>=i-k+1;j--)
                tree[i] += nums[i-1];
                */
        }
    }

    void update(int i, int val) 
    {
        //add(i+1,val - nums[i]);
        
        int n = i+1,cha = val - nums[i];
        nums[i] = val;
        while(n <= this.end)
        {
            tree[n] = tree[n] + cha;
            n = n + lowBit(n);
        }
        
    }
    void add(int i,int addend)
    {
        while(i <= this.end)
        {
            tree[i] += addend;
            i += lowBit(i);
        }        
    }
    public int sum(int en)
    {
        int sum = 0;
        while(en>0)
        {
            sum += tree[en];
            en -= lowBit(en);
        }
        return sum;
    }
    public int sumRange(int i, int j) 
    {
        return sum(j+1) - sum(i);
    }
}


// Your NumArray object will be instantiated and called as such:
// NumArray numArray = new NumArray(nums);
// numArray.sumRange(0, 1);
// numArray.update(1, 10);
// numArray.sumRange(1, 2);