public class Solution {
    public ListListInteger combinationSum(int[] candidates, int target) {
        ListListInteger ans = new ArrayList();
        Arrays.sort(candidates);
         ListInteger l = new ArrayList();
         for(int i = 0;icandidates.length;i++) {
             if( (i != 0 && candidates[i] == candidates[i-1])  target  candidates[i])
                 continue;
             l.add(candidates[i]);
             p(candidates,target-candidates[i],ans,new ArrayList(l),i);
             l.remove(0);
         }
        p(candidates,target,ans,new ArrayList(),0);
        return ans;
    }
    public void p(int[] candidates, int target,ListListInteger ans,ListInteger l,int st) {
        if(target  0)
            return ;
        if(target == 0) {
            ans.add(l);
        }
        else {
            for(int i = st;icandidates.length;i++) {
                if(target  candidates[i])
                    continue;
                l.add(candidates[i]);
                p(candidates,target-candidates[i],ans,new ArrayList(l),i);
                l.remove(l.size()-1);
                while(i != candidates.length-1 && candidates[i] == candidates[i+1])
                    ++i;
            }         
        }
    }
}