public class Solution {
    HashMap<Character,Integer> hm;
    char[] cc;
    StringBuilder ans;
    PriorityQueue<N> pq;
    public String frequencySort(String s) {
        hm = new HashMap<Character,Integer>();
        cc = s.toCharArray();
        pq = new PriorityQueue<N>(new Comparator<N>(){
            public int compare(N a,N b) {
                return b.freq - a.freq;
            }
        } );
        for(char c:cc)
            if(hm.containsKey(c))
                hm.put(c,hm.get(c)+1 );
            else
                hm.put(c,1);
        Set<Character> ss = hm.keySet();
        for(char num : ss)
            pq.offer(new N(num,hm.get(num)));
        ans = new StringBuilder();
        for(int i = 0;i<ss.size();i++) {
            N n = pq.poll();
            for(int j = 0;j<n.freq;j++)
                ans.append(n.num);
        }
        return ans.toString();
    }
}
class N
{
    char num;
    int freq;
    N(char num,int freq)
    {
        this.num = num;
        this.freq = freq;
    }
}
