/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    int getH(TreeNode root) {
        if(root == null)
            return 0;
        else 
            return Math.max(getH(root.left),getH(root.right))+1;
    }

    int visit(TreeNode root) {
        return getH(root.left)+getH(root.right);
    }
    public int diameterOfBinaryTree(TreeNode root) {
        Stack<TreeNode> s = new Stack<>();
        int ans = 0;
        while(root != null || !s.isEmpty() ) {
            while(root != null) {
                ans = Math.max(ans,visit(root) );
                s.push(root);
                root = root.left;
            }
            root = s.pop().right;
        }
        return ans;
    }
}