/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return buildTree(preorder,0,preorder.length - 1,inorder,0,inorder.length -1);
    }
    private TreeNode buildTree(int[] pre,int pst,int pen,int[] in,int ist,int ien) {
        if(pen<pst || ien<ist)
            return null;
        TreeNode root = new TreeNode(pre[pst]);
        int i;
        for(i = ist;i<=ien;i++) {
            if(in[i] == pre[pst])
                break;
        }
        root.left = buildTree(pre,pst+1,pst + i - ist,in,ist,i-1);
        root.right = buildTree(pre,pst + i - ist + 1,pen,in,i+1,ien);
        return root;
    }
}