/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode findMid(ListNode head) {
        ListNode s = head,f = head,pre = null;
        while(f != null) {
            f = f.next;
            if(f != null) {
                f = f.next;
                pre = s ;
                s = s.next;
            }
                 
        }
        pre.next = null;
        return s;
    }
    public ListNode mergeList(ListNode l1,ListNode l2) {
        if(l1 == null)
            return l2;
        if(l2 == null)
            return l1;
        ListNode head = null;
        if(l1.val<l2.val) {
            head = l1;
            head.next = mergeList(l1.next,l2);
        }
        else {
            head = l2;
            head.next = mergeList(l1,l2.next);
        }
        return head;
    }
    public ListNode sortList(ListNode head) {
        if(head == null || head.next == null) 
            return head;
        ListNode mid = findMid(head);
        
        
        return mergeList(sortList(head),sortList(mid));
        
    }
}