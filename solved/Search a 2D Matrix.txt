public class Solution {
    public boolean binSearch(int[] a,int target) {
        int l = 0,h = a.length - 1,mid;
        while(l<=h) {
            mid = (l+h) >> 1;
            if(a[mid] > target)
                h = mid -1;
            else {
                if(a[mid] < target)
                    l = mid +1;
                else
                    return true;
            }
        }
        return false;
    }
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length == 1)
            return binSearch(matrix[0],target);
        int mid,low = 0,high = matrix.length - 1;
        while(low<=high) {
            mid = (low + high) >> 1;
            if(matrix[mid][0] > target) {
                high = mid - 1; 
            }
            else {
                if(matrix[mid][0] < target) {
                    low = mid + 1;
                }
                else
                    return true;
            }
                 
        }
        if(high<0)
            return false;
        return binSearch(matrix[high],target);
        /*
        int l = 0,h = matrix[high].length - 1;
        while(l<=h) {
            mid = (l+h) >> 1;
            if(matrix[high][mid] > target)
                h = mid -1;
            else {
                if(matrix[high][mid] < target)
                    l = mid +1;
                else
                    return true;
            }
        }
        return false;*/
    }
}