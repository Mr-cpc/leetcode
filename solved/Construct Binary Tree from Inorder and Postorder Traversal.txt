/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        return buildTree(inorder,0,inorder.length - 1,postorder,0,postorder.length - 1);
    }
    private TreeNode buildTree(int[] in, int ist,int ien, int[] post,int pst,int pen) {
        if(ien<ist || pen<pst)
            return null;
        TreeNode root = new TreeNode(post[pen]);
        int i;
        for(i = ist;i<=ien;i++) {
            if(in[i] == post[pen])
                break;
        }
        root.left = buildTree(in,ist,i-1,post,pst,pst+i-1-ist);
        root.right = buildTree(in,i+1,ien,post,pst+i-ist,pen-1);
        return root;
    }
}