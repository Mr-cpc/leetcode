public class Solution {
    private int partition(int[] a,int low,int high) {
        int x = a[low];
        while(low < high) {
            while(high > low && a[high] >= x)
                high--;
            a[low] = a[high];
            while(low < high && a[low] <= x)
                low++;
            a[high] = a[low];
        }
        a[low] = x;
        return low;
    }
    public int minMoves2(int[] nums) {
        int k,st = 0,en = nums.length - 1,mid = nums.length >> 1;
        do {
            k = partition(nums,st,en);
            if(k == mid)
                break;
            else {
                if(mid > k)
                    st = k+1;
                else
                    en = k-1;
            }
        }while(k != mid);
        int ans = 0;
        for(int i:nums) {
            ans += Math.abs(i-nums[k]);
        }
        return ans;
    }
}